name: Benchmark Test on AWS

on:
  push:
  workflow_dispatch: 

jobs:
  test:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
      
      - name: Install Node Modules
        run: |
          yarn
          mkdir scripts/logs

      - name: Start EC2 Instance
        run: aws ec2 run-instances --image-id ${{ secrets.EC2_AMI }} --instance-type t3.medium --key-name benchmark --subnet-id ${{ secrets.EC2_SUBNET }} --security-group-ids ${{ secrets.EC2_SG }} > ec2.json
        env:
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}

      - name: Set Instance ID
        id: instanceId
        run: |
          echo "INSTANCE_ID=$(jq ".Instances[0].InstanceId" ec2.json | tr -d '"')" >> $GITHUB_ENV
          echo $INSTANCE_ID

      - name: Tag and Wait for EC2 
        run: |
          aws ec2 create-tags --resources $INSTANCE_ID --tags Key=Name,Value="Temp VM for Benchmark Testing"
          aws ec2 wait instance-running --instance-ids $INSTANCE_ID
        env:
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}

      - name: Get Public IP
        run: |
          aws ec2 describe-instances --filters "Name=instance-id,Values=$INSTANCE_ID" --query "Reservations[*].Instances[*].PublicIpAddress" > ip.json
          echo "PUBLIC_IP=$(jq ".[0][0]" ip.json | tr -d '"')" >> $GITHUB_ENV
          echo $PUBLIC_IP
        env:
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}

      - name: Create PEM file
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > benchmark.pem
          chmod 400 benchmark.pem
          eval "$(ssh-agent -s)"
          ssh-add benchmark.pem
          cat /etc/ssh/ssh_config
          ls

      - name: Sleep for 20s
        uses: juliangruber/sleep-action@v1
        with:
          time: 20s

      - name: SSH to machine
        run: |
          ssh -o StrictHostKeyChecking=no -i benchmark.pem ubuntu@$PUBLIC_IP git clone https://${{ secrets.ADMIN_TOKEN }}@github.com/aspecto-io/benchmarks.git
          ssh -o StrictHostKeyChecking=no -i benchmark.pem ubuntu@$PUBLIC_IP sed -i "s/my-token/${{ secrets.ASPECTO_API_KEY }}/g" benchmarks/aspecto.json
          ssh -o StrictHostKeyChecking=no -i benchmark.pem ubuntu@$PUBLIC_IP cat benchmarks/aspecto.json
          ssh -o StrictHostKeyChecking=no -i benchmark.pem ubuntu@$PUBLIC_IP docker-compose -f benchmarks/docker-compose.yml build
          ssh -o StrictHostKeyChecking=no -i benchmark.pem ubuntu@$PUBLIC_IP docker-compose -f benchmarks/docker-compose.yml up -d
      
      - name: Sleep for 15s
        uses: juliangruber/sleep-action@v1
        with:
          time: 15s

      - name: Install Apache Bench
        run: | 
          sudo apt-get install apache2-utils
          ab -V

      - name: Benchmark Test - Baseline
        run: |
          curl http://$PUBLIC_IP:4040/start-collecting
          ab -n 1000 -c 10 -l http://$PUBLIC_IP:4040/test > scripts/logs/baseline-ab.log
          curl http://$PUBLIC_IP:4040/report > scripts/logs/baseline-report.json
          cat scripts/logs/baseline-ab.log
          cat scripts/logs/baseline-report.json
          python -m json.tool scripts/logs/baseline-report.json


      - name: Benchmark Test - Aspecto
        run: |
          echo "curl start collecting"
          curl http://$PUBLIC_IP:4041/start-collecting
          echo "running ab"
          ab -n 1000 -c 10 -l http://$PUBLIC_IP:4041/test > scripts/logs/aspecto-ab.log
          echo "asking for report"
          curl http://$PUBLIC_IP:4041/report > scripts/logs/aspecto-report.json
          echo "printing ab log"
          cat scripts/logs/aspecto-ab.log
          echo "printing aspecto report"
          cat scripts/logs/aspecto-report.json
          echo "prettyfying report report"
          python -m json.tool scripts/logs/aspecto-report.json


      - name: Generate Full report
        run: yarn report:aws
        env:
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
      
      - name: Print docker logs
        if: ${{ always() }}
        run: ssh -o StrictHostKeyChecking=no -i benchmark.pem ubuntu@$PUBLIC_IP docker-compose -f benchmarks/docker-compose.yml logs

      - name: Upload reports to artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: reports
          path: scripts/logs/

      - name: Terminate Instance
        if: ${{ always() }}
        run: aws ec2 terminate-instances --instance-ids $INSTANCE_ID
        env:
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}